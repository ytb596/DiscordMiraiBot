
module.exports = {
    name: 'math',
    description: 'Th·ª±c hi·ªán c√°c ph√©p t√≠nh to√°n h·ªçc c∆° b·∫£n',
    aliases: ['calc', 'calculate', 'tinh'],
    usage: '<bi·ªÉu_th·ª©c_to√°n_h·ªçc>',
    cooldown: 3,
    category: 'Ti·ªán √≠ch',
    version: '1.3.0',
    cre: 'MiraiDev',

    async execute(client, message, args) {
        try {
            if (!args.length) {
                return message.reply('‚ùå Vui l√≤ng cung c·∫•p bi·ªÉu th·ª©c to√°n h·ªçc ƒë·ªÉ t√≠nh!\n**V√≠ d·ª•:** `!math 2 + 2`, `!math 5 * 3 - 1`');
            }

            const expression = args.join(' ');
            
            // Ki·ªÉm tra c√°c k√Ω t·ª± kh√¥ng an to√†n
            if (!/^[0-9+\-*/.() ]+$/.test(expression)) {
                return message.reply('‚ùå Bi·ªÉu th·ª©c ch·ªâ ƒë∆∞·ª£c ch·ª©a s·ªë, d·∫•u +, -, *, /, (, ) v√† kho·∫£ng tr·∫Øng!');
            }

            // Ki·ªÉm tra c√°c pattern nguy hi·ªÉm
            const dangerousPatterns = [
                /[a-zA-Z]/,  // Ch·ªØ c√°i
                /\.\./,      // Hai d·∫•u ch·∫•m li√™n ti·∫øp
                /\+\+/,      // Hai d·∫•u c·ªông li√™n ti·∫øp
                /--/,        // Hai d·∫•u tr·ª´ li√™n ti·∫øp
                /\*\*/,      // Hai d·∫•u nh√¢n li√™n ti·∫øp
                /\/\//       // Hai d·∫•u chia li√™n ti·∫øp
            ];

            for (const pattern of dangerousPatterns) {
                if (pattern.test(expression)) {
                    return message.reply('‚ùå Bi·ªÉu th·ª©c kh√¥ng h·ª£p l·ªá!');
                }
            }

            let result;
            try {
                // S·ª≠ d·ª•ng Function constructor an to√†n h∆°n eval
                result = Function(`"use strict"; return (${expression})`)();
            } catch (error) {
                return message.reply('‚ùå Bi·ªÉu th·ª©c to√°n h·ªçc kh√¥ng h·ª£p l·ªá!');
            }

            // Ki·ªÉm tra k·∫øt qu·∫£
            if (!isFinite(result)) {
                return message.reply('‚ùå K·∫øt qu·∫£ kh√¥ng h·ª£p l·ªá (v√¥ c·ª±c ho·∫∑c NaN)!');
            }

            // L√†m tr√≤n k·∫øt qu·∫£ n·∫øu l√† s·ªë th·∫≠p ph√¢n
            if (result % 1 !== 0) {
                result = Math.round(result * 100000000) / 100000000; // L√†m tr√≤n 8 ch·ªØ s·ªë th·∫≠p ph√¢n
            }

            const embed = {
                color: 0x2ecc71,
                title: 'üßÆ M√°y T√≠nh To√°n',
                fields: [
                    {
                        name: 'üìù Bi·ªÉu th·ª©c',
                        value: `\`${expression}\``,
                        inline: false
                    },
                    {
                        name: '‚úÖ K·∫øt qu·∫£',
                        value: `**${result}**`,
                        inline: false
                    }
                ],
                timestamp: new Date(),
                footer: {
                    text: `MIRAI Bot ‚Ä¢ T√≠nh cho ${message.author.username}`
                }
            };

            return message.reply({ embeds: [embed] });
        } catch (error) {
            console.error(`Error executing ${this.name}:`, error);
            return message.reply('‚ùå ƒê√£ x·∫£y ra l·ªói khi th·ª±c hi·ªán ph√©p t√≠nh!');
        }
    }
};
